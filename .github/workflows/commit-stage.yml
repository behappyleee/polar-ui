name: Commit Stage
on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: behappyleee/polar-ui
  VERSION: latest

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Build, unit tests and integration tests
        run: |
          chmod +x gradlew
          ./gradlew buildAngular
      - name: Code vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          path: "${{ github.workspace }}"
          fail-build: false
          severity-cutoff: high
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Validate Kubernetes manifests
        uses: stefanprodan/kube-tools@v1
        with:
          kubectl: 1.28.3
          kubeconform: 0.6.4
          command: |
            kubeconform --strict k8s
  package:
    name: Package and Publish (Multi-Arch)
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [ build ]
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Build SPA
        run: |
          chmod +x gradlew
          ./gradlew buildAngular
      - name: Log into container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
            - name: Build & publish amd64 image with pack
              env:
                DOCKER_DEFAULT_PLATFORM: linux/amd64
              run: |
                pack build ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}-amd64 \
                  --buildpack gcr.io/paketo-buildpacks/nginx \
                  --builder paketobuildpacks/builder-jammy-base \
                  --path dist \
                  --publish
            - name: Build & publish arm64 image with pack
              env:
                DOCKER_DEFAULT_PLATFORM: linux/arm64
              run: |
                pack build ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}-arm64 \
                  --buildpack gcr.io/paketo-buildpacks/nginx \
                  --builder paketobuildpacks/builder-jammy-base \
                  --path dist \
                  --publish
            - name: Create and push multi-arch manifest
              run: |
                docker buildx imagetools create \
                  -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} \
                  ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}-amd64 \
                  ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}-arm64
                # 확인(Optional)
                docker buildx imagetools inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
